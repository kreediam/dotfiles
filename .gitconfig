[user]
	name = 
	email = 
[push]
	default = simple
[core]
	autocrlf = true
[credential]
[difftool "sourcetree"]
	cmd = 'C:/Program Files/TortoiseSVN/bin/TortoiseMerge.exe' \"$LOCAL\" \"$REMOTE\"
[alias]
	ec = config --global -e
	ls = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate
	la = "!git config -l | grep alias | cut -c 7-"
	ci = commit
	cm = commit -m
	co = checkout
	cob = checkout -b
	st = status
	dui = commit -m 'Update deployment project to include latest built files'
	branch-name = "!git rev-parse --abbrev-ref HEAD"
	publish = "!git push -u origin $(git branch-name)"
	up = "!f() { git fetch && git checkout ${1-dev} && git pull ; }; f"	
	rb = "!f() { git rebase -i HEAD~$1; }; f"
	uprb = "!f() { git up && git co $1 && git rebase ${2-dev} ; }; f"
	cl = "!f() { git co ${1-dev} && git branch --merged ${1-dev} | egrep -v 'dev|release|master' | xargs -r git branch -d ; }; f"
	done = "!f() { git up ${1-dev} && git cl ${1-dev} ; }; f"
	release = "!f() { git up dev && git up release && git merge dev ; }; f"
	tag-major = "!f() { git describe | awk -F'[.-]' '{print $1+1 \".\" 0 \".\" 0}' | xargs -r git tag -a -m \"\" ; }; f"
	tag-minor = "!f() { git describe | awk -F'[.-]' '{print $1 \".\" $2+1 \".\" 0}' | xargs -r git tag -a -m \"\" ; }; f"
	tag-bug = "!f() { git describe | awk -F'[.-]' '{print $1 \".\" $2 \".\" $3+1}' | xargs -r git tag -a -m \"\" ; }; f"
[credential]
	helper = manager
[mergetool "sourcetree"]
	cmd = 'C:/Program Files/TortoiseSVN/bin/TortoiseMerge.exe'  -base:\"$BASE\" -mine:\"$LOCAL\" -theirs:\"$REMOTE\" -merged:\"$MERGED\"
	trustExitCode = true
[filter "lfs"]
	clean = git-lfs clean %f
	smudge = git-lfs smudge %f
	required = true
